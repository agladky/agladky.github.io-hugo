<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test on Анатолий Гладкий</title>
    <link>https://agladky.ru/tags/test/</link>
    <description>Recent content in Test on Анатолий Гладкий</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-RU</language>
    <lastBuildDate>Sat, 05 Sep 2015 13:10:07 +0300</lastBuildDate>
    
	<atom:link href="https://agladky.ru/tags/test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Как тестировать абстрактные классы</title>
      <link>https://agladky.ru/blog/how-to-test-abstract-classes/</link>
      <pubDate>Sat, 05 Sep 2015 13:10:07 +0300</pubDate>
      
      <guid>https://agladky.ru/blog/how-to-test-abstract-classes/</guid>
      <description>Абстрактные классы сложно тестировать. Рассмотрим ситуации применения абстрактных классов и последующего рефакторинга для проведения юнит тестирования.
Выделить реальный интерфейс Существует специализированный абстрактный класс, но все клиенты используют его конкретные реализации через единый публичный интерфейс:
   Классы-потомки реализуют интерфейс, определенный абстрактными методами класса. Для повышения тестируемости этот интерфейс выделяется. Абстрактный класс превращается в конкретный и в его конструктор передается объект классов-потомков, реализующих выделенный интерфейс.
Применяется шаблон проектирования стратегия.</description>
    </item>
    
  </channel>
</rss>